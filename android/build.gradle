buildscript {
    repositories {
        jcenter()
        maven {
            url "https://raw.githubusercontent.com/konikvranik/m2repo/master/"
        }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.+'
    }
}

apply plugin: 'android'

repositories {
    jcenter()
    mavenLocal()
    maven {
        url "http://pandora.comerge.net:8081/nexus/content/repositories/public_snapshots/"
    }

}

if (project.rootProject.file('local.properties').exists()) {
    Properties buildProps = new Properties()
    buildProps.load(project.rootProject.file('local.properties').newDataInputStream())
    buildProps.each { prop ->
        project.ext.set(prop.key, prop.value)
    }
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "net.suteren.worksaldo.android"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    signingConfigs {
        release {
            storeFile file("release.keystore")
            keyAlias "worksaldo"

            storePassword project.ext.get('pwd.keystore')
            keyPassword project.ext.get('pwd.key')
            //storePassword System.getenv("KSTOREPWD")
            //keyPassword System.getenv("KEYPWD")
            //storePassword System.console().readLine("\nKeystore password: ")
            //keyPassword System.console().readLine("\nKey password: ")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    packagingOptions {
        exclude 'META-INF/jersey-module-version'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
    }


    dexOptions {
        preDexLibraries = false
    }

}

project.tasks.withType(com.android.build.gradle.tasks.Dex) {
    additionalParameters = ['--core-library']
}

/*
configurations {
    compile.exclude group: 'javax.inject', module: 'javax.inject'
}
*/

/*
configurations.compile.exclude module: 'javax.inject'
configurations.compile.exclude module: 'jaxb-api'
*/

dependencies {
    /*
    compile ('ch.simas.jtoggl:jtoggl-api:jackson-2.0.1-SNAPSHOT') {
        exclude module: 'junit'
        exclude module: 'javax.inject'
        exclude module: 'jaxb-api'
    }
    */
    compile project(':common')
    compile project(':androidsvg')
    compile(project(':jtoggl-api')) {
        exclude module: 'junit'
        exclude module: 'javax.inject'
        exclude module: 'jaxb-api'
    }
    compile files('libs/android-ws-combine.jar')
    compile('com.google.inject:guice:3.0') {
        exclude module: 'aopalliance'
    }
    compile('org.simpleframework:simple-xml:2.7.1') {
        exclude module: 'stax'
        exclude module: 'stax-api'
        exclude module: 'xpp3'
    }
    compile 'com.android.support:support-v4:23.+'

    testCompile 'junit:junit:4.12'

}
